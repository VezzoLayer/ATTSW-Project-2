<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.ecommerce</groupId>
	<artifactId>ecommerce-manager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ecommerce-manager</name>
	<description>E-Commerce Manager for ATTSW Project</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	
	<properties>
		<java.version>17</java.version>
		
		<skip.unit-tests>false</skip.unit-tests>
		<skip.integration-tests>false</skip.integration-tests>
		
		<!-- Configurazione Sonar -->
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.organization>vezzolayer</sonar.organization>
		<sonar.projectKey>VezzoLayer_ATTSW-Project-2</sonar.projectKey>
		<!-- Locazione report Jacoco -->
		<sonar.coverage.jacoco.xmlReportPaths>
			${project.reporting.outputDirectory}/jacoco/jacoco.xml
		</sonar.coverage.jacoco.xmlReportPaths>
		<!-- Include UT e IT -->
		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>
		<!-- Scan di ulteriori files -->
		<sonar.sources>
			pom.xml,
			${project.build.sourceDirectory},
			${basedir}/src/main/resources
		</sonar.sources>
		<!-- Rileva ulteriori tests configurati nel build-helper-maven-plugin -->
		<sonar.tests>
			${project.build.testSourceDirectory},
			${basedir}/src/it/java,
			${basedir}/src/e2e/java
		</sonar.tests>
		<!-- Esclude Model e Application -->
		<sonar.coverage.exclusions>
			**/model/*,
			**/EcommerceManagerApplication.*
		</sonar.coverage.exclusions>
		<sonar.issue.ignore.multicriteria>e12</sonar.issue.ignore.multicriteria>
		<!-- Disabilita "Credentials should not be hard-coded" -->
		<sonar.issue.ignore.multicriteria.e12.ruleKey>java:S6437</sonar.issue.ignore.multicriteria.e12.ruleKey>
		<sonar.issue.ignore.multicriteria.e12.resourceKey>**/application*</sonar.issue.ignore.multicriteria.e12.resourceKey>

	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.jupiter</groupId>
					<artifactId>junit-jupiter</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Per usare test parametrizzati -->
		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>1.1.1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.postgresql</groupId>
		    <artifactId>postgresql</artifactId>
		    <scope>runtime</scope>
		</dependency>
				
		<dependency>
			<groupId>org.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>spring-mock-mvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>htmlunit-driver</artifactId>
			<version>4.13.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-devtools-v122</artifactId>
			<version>4.20.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>6.3.1</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skip.unit-tests}</skipTests>
					<includes>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
					<id>default</id>
						<configuration>
							<skipTests>${skip.integration-tests}</skipTests>
							<includes>
								<include>**/*ApplicationTests.java</include>
								<include>**/*IT.java</include>
							</includes>
						</configuration>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
        	</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
		
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.21.0</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.13</version>
					<configuration>
						<excludes>
							<exclude>**/EcommerceManagerApplication.*</exclude>
							<exclude>**/model/*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
						<goals>
							<goal>prepare-agent</goal>
							<goal>report</goal>
						</goals>
						</execution>
						<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<limits>
										<limit>
										    <counter>LINE</counter>
										    <value>COVEREDRATIO</value>
										    <minimum>1.00</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>1.15.0</version>
					<configuration>
						<targetClasses>
							<param>com.ecommerce.manager.services*</param>
							<param>com.ecommerce.manager.controllers*</param>
						</targetClasses>
						<targetTests>
							<param>com.ecommerce.manager.services*</param>
							<param>com.ecommerce.manager.controllers*</param>
						</targetTests>
						<mutators>
							<mutator>STRONGER</mutator>
						</mutators>
						<mutationThreshold>100</mutationThreshold>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>mutationCoverage</goal>
							</goals>
							<phase>verify</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>4.3.0</version>
					<dependencies>
						<!-- Richiesto perché uso JDK 17 e javax.xml.bind è stato rimosso dalla versione 9 o superiori -->
					<dependency>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
						<version>2.3.1</version>
					</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>5.2.0.4988</version>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.46.0</version>
					<configuration>
						<images>
							<image>
								<name>postgres:13.22</name>
								<run>
									<ports>
										<port>5432:5432</port>
									</ports>
									<env>
										<POSTGRES_DB>e-commercedb</POSTGRES_DB>
										<POSTGRES_USER>user</POSTGRES_USER>
										<POSTGRES_PASSWORD>pass</POSTGRES_PASSWORD>
									</env>
								</run>
							</image>
						</images>
					</configuration>
					<executions>
						<execution>
							<id>docker-start</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>docker-stop</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>mutation-testing</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profilo che lega l'esecuzione di jacoco e coveralls perché coveralls richiede i report di jacoco -->
		<profile>
			<id>coveralls</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<!-- Profilo per l'esecuzione solitaria e2e-tests -->
		<profile>
			<id>e2e-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<skip.unit-tests>true</skip.unit-tests>
				<skip.integration-tests>true</skip.integration-tests>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>reserve-tomcat-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>process-resources</phase>
								<configuration>
									<portNames>
										<portName>tomcat.http.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>pre-integration-test</id>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>--server.port=${tomcat.http.port}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>post-integration-test</id>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
		                <groupId>io.fabric8</groupId>
		                <artifactId>docker-maven-plugin</artifactId>
		                <executions>
		                    <execution>
		                        <id>docker-stop</id>
		                        <phase>verify</phase>
		                        <goals>
		                            <goal>stop</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>e2e-tests</id>
								<configuration>
									<includes>
										<include>**/*E2E.java</include>
									</includes>
								</configuration>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<systemPropertyVariables>
								<server.port>${tomcat.http.port}</server.port>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
